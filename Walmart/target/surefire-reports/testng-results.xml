<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="3" failed="1" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[Extent Report Directory/Users/mohammadaziz/WebAutomationFramework_Team2/Walmart/target/surefire-reports/html]]>
    </line>
  </reporter-output>
  <suite started-at="2021-03-19T16:38:59 EDT" name="WalmartTestSuit" finished-at="2021-03-19T16:39:21 EDT" duration-ms="21479">
    <groups>
    </groups>
    <test started-at="2021-03-19T16:38:59 EDT" name="Walmart Automation" finished-at="2021-03-19T16:39:21 EDT" duration-ms="21479">
      <class name="testWalmartHomePage.testWalmart">
        <test-method is-config="true" signature="extentSetup(org.testng.ITestContext)[pri:0, instance:testWalmartHomePage.testWalmart@6295d394]" started-at="2021-03-19T16:38:58 EDT" name="extentSetup" finished-at="2021-03-19T16:38:59 EDT" duration-ms="966" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@2ff95fc6]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Extent Report Directory/Users/mohammadaziz/WebAutomationFramework_Team2/Walmart/target/surefire-reports/html]]>
            </line>
          </reporter-output>
        </test-method> <!-- extentSetup -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testWalmartHomePage.testWalmart@6295d394]" started-at="2021-03-19T16:38:59 EDT" name="setUp" finished-at="2021-03-19T16:39:03 EDT" duration-ms="4241" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserStack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[86]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.walmart.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testWalmartHomePage.testWalmart@6295d394]" started-at="2021-03-19T16:39:03 EDT" name="startExtent" finished-at="2021-03-19T16:39:03 EDT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void testWalmartHomePage.testWalmart.validateComputersIsEnable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="runBeforeEachTest()[pri:0, instance:testWalmartHomePage.testWalmart@6295d394]" started-at="2021-03-19T16:39:03 EDT" name="runBeforeEachTest" finished-at="2021-03-19T16:39:03 EDT" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runBeforeEachTest -->
        <test-method signature="validateComputersIsEnable()[pri:0, instance:testWalmartHomePage.testWalmart@6295d394]" started-at="2021-03-19T16:39:03 EDT" name="validateComputersIsEnable" finished-at="2021-03-19T16:39:04 EDT" duration-ms="243" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateComputersIsEnable -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testWalmartHomePage.testWalmart@6295d394]" started-at="2021-03-19T16:39:04 EDT" name="afterEachTestMethod" finished-at="2021-03-19T16:39:04 EDT" duration-ms="194" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateComputersIsEnable status=SUCCESS method=testWalmart.validateComputersIsEnable()[pri:0, instance:testWalmartHomePage.testWalmart@6295d394] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testWalmartHomePage.testWalmart@6295d394]" started-at="2021-03-19T16:39:04 EDT" name="cleanUp" finished-at="2021-03-19T16:39:04 EDT" duration-ms="97" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testWalmartHomePage.testWalmart@6295d394]" started-at="2021-03-19T16:39:04 EDT" name="setUp" finished-at="2021-03-19T16:39:08 EDT" duration-ms="4019" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserStack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[86]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.walmart.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="runBeforeEachTest()[pri:0, instance:testWalmartHomePage.testWalmart@6295d394]" started-at="2021-03-19T16:39:08 EDT" name="runBeforeEachTest" finished-at="2021-03-19T16:39:08 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runBeforeEachTest -->
        <test-method signature="validateElectronicsAndOfficeIsClickable()[pri:0, instance:testWalmartHomePage.testWalmart@6295d394]" started-at="2021-03-19T16:39:08 EDT" name="validateElectronicsAndOfficeIsClickable" finished-at="2021-03-19T16:39:09 EDT" duration-ms="1166" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element is not clickable at point (-29, 568)
  (Session info: chrome=89.0.4389.90)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'Mohammads-MacBook-Pro-2.local', ip: 'fe80:0:0:0:1024:f6cc:862e:caee%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '11.2.3', java.version: '15.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 89.0.4389.90, chrome: {chromedriverVersion: 88.0.4324.96 (68dba2d8a0b14..., userDataDir: /var/folders/rr/nrpq70fj7zs...}, goog:chromeOptions: {debuggerAddress: localhost:50702}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 02ce28f122c21b97b33439e8551bdebb]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element is not clickable at point (-29, 568)
  (Session info: chrome=89.0.4389.90)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'Mohammads-MacBook-Pro-2.local', ip: 'fe80:0:0:0:1024:f6cc:862e:caee%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '11.2.3', java.version: '15.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 89.0.4389.90, chrome: {chromedriverVersion: 88.0.4324.96 (68dba2d8a0b14..., userDataDir: /var/folders/rr/nrpq70fj7zs...}, goog:chromeOptions: {debuggerAddress: localhost:50702}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 02ce28f122c21b97b33439e8551bdebb
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at com.sun.proxy.$Proxy14.click(Unknown Source)
at homePage.WalmartHomePage.verifyElectronicsAndOfficeIsClickable(WalmartHomePage.java:29)
at testWalmartHomePage.testWalmart.validateElectronicsAndOfficeIsClickable(testWalmart.java:21)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateElectronicsAndOfficeIsClickable -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testWalmartHomePage.testWalmart@6295d394]" started-at="2021-03-19T16:39:08 EDT" name="startExtent" finished-at="2021-03-19T16:39:08 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void testWalmartHomePage.testWalmart.validateElectronicsAndOfficeIsClickable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testWalmartHomePage.testWalmart@6295d394]" started-at="2021-03-19T16:39:09 EDT" name="afterEachTestMethod" finished-at="2021-03-19T16:39:10 EDT" duration-ms="750" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateElectronicsAndOfficeIsClickable status=FAILURE method=testWalmart.validateElectronicsAndOfficeIsClickable()[pri:0, instance:testWalmartHomePage.testWalmart@6295d394] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testWalmartHomePage.testWalmart@6295d394]" started-at="2021-03-19T16:39:10 EDT" name="cleanUp" finished-at="2021-03-19T16:39:10 EDT" duration-ms="97" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testWalmartHomePage.testWalmart@6295d394]" started-at="2021-03-19T16:39:10 EDT" name="setUp" finished-at="2021-03-19T16:39:14 EDT" duration-ms="3832" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserStack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[86]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.walmart.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="runBeforeEachTest()[pri:0, instance:testWalmartHomePage.testWalmart@6295d394]" started-at="2021-03-19T16:39:14 EDT" name="runBeforeEachTest" finished-at="2021-03-19T16:39:14 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runBeforeEachTest -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testWalmartHomePage.testWalmart@6295d394]" started-at="2021-03-19T16:39:14 EDT" name="startExtent" finished-at="2021-03-19T16:39:14 EDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void testWalmartHomePage.testWalmart.validateIpadAndTabletIsDisplayed()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="validateIpadAndTabletIsDisplayed()[pri:0, instance:testWalmartHomePage.testWalmart@6295d394]" started-at="2021-03-19T16:39:14 EDT" name="validateIpadAndTabletIsDisplayed" finished-at="2021-03-19T16:39:14 EDT" duration-ms="284" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateIpadAndTabletIsDisplayed -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testWalmartHomePage.testWalmart@6295d394]" started-at="2021-03-19T16:39:14 EDT" name="afterEachTestMethod" finished-at="2021-03-19T16:39:14 EDT" duration-ms="50" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateIpadAndTabletIsDisplayed status=SUCCESS method=testWalmart.validateIpadAndTabletIsDisplayed()[pri:0, instance:testWalmartHomePage.testWalmart@6295d394] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testWalmartHomePage.testWalmart@6295d394]" started-at="2021-03-19T16:39:14 EDT" name="cleanUp" finished-at="2021-03-19T16:39:14 EDT" duration-ms="101" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testWalmartHomePage.testWalmart@6295d394]" started-at="2021-03-19T16:39:14 EDT" name="setUp" finished-at="2021-03-19T16:39:18 EDT" duration-ms="3694" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserStack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[86]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://www.walmart.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testWalmartHomePage.testWalmart@6295d394]" started-at="2021-03-19T16:39:18 EDT" name="startExtent" finished-at="2021-03-19T16:39:18 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[private void testWalmartHomePage.testWalmart.validateTvAndVideoIsEnabled()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="runBeforeEachTest()[pri:0, instance:testWalmartHomePage.testWalmart@6295d394]" started-at="2021-03-19T16:39:18 EDT" name="runBeforeEachTest" finished-at="2021-03-19T16:39:18 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runBeforeEachTest -->
        <test-method signature="validateTvAndVideoIsEnabled()[pri:0, instance:testWalmartHomePage.testWalmart@6295d394]" started-at="2021-03-19T16:39:18 EDT" name="validateTvAndVideoIsEnabled" finished-at="2021-03-19T16:39:20 EDT" duration-ms="2506" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateTvAndVideoIsEnabled -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testWalmartHomePage.testWalmart@6295d394]" started-at="2021-03-19T16:39:20 EDT" name="afterEachTestMethod" finished-at="2021-03-19T16:39:21 EDT" duration-ms="46" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateTvAndVideoIsEnabled status=SUCCESS method=testWalmart.validateTvAndVideoIsEnabled()[pri:0, instance:testWalmartHomePage.testWalmart@6295d394] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:testWalmartHomePage.testWalmart@6295d394]" started-at="2021-03-19T16:39:21 EDT" name="cleanUp" finished-at="2021-03-19T16:39:21 EDT" duration-ms="117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="generateReport()[pri:0, instance:testWalmartHomePage.testWalmart@6295d394]" started-at="2021-03-19T16:39:21 EDT" name="generateReport" finished-at="2021-03-19T16:39:21 EDT" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
      </class> <!-- testWalmartHomePage.testWalmart -->
    </test> <!-- Walmart Automation -->
  </suite> <!-- WalmartTestSuit -->
</testng-results>
